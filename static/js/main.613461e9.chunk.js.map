{"version":3,"sources":["components/parameterSlider.js","components/parameterInput.js","components/colorGenerator.js","pages/toppage.js","index.js"],"names":["useStyles","makeStyles","root","width","input","ParameterSliter","props","classes","React","useState","value","setValue","className","Grid","container","spacing","alignItems","item","Typography","id","gutterBottom","valueName","xs","Slider","onChange","event","newValue","Input","margin","target","Number","onBlur","inputProps","step","min","max","type","fontWeight","ParameterInput","marginTop","ColorGenerator","S","setS","V","setV","N","setN","colorList","setColorList","GenerateColorList","colorli","map","color","Button","variant","onClick","i","H","parseInt","concat","R","G","B","toString","padStart","toRGB","title","paddingTop","textAlign","subtitle","borderBottom","text","ReactDOM","render","exact","path","component","rel","href","document","getElementById"],"mappings":"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","file":"static/js/main.613461e9.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42,\n  },\n});\n\nexport default function ParameterSliter(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(props.value);\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n    props.onChange(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\n    props.onChange(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n            <Typography id=\"input-slider\" gutterBottom>\n                {props.valueName}\n            </Typography>\n        </Grid>\n        <Grid item xs>\n          <Slider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n          />\n        </Grid>\n        <Grid item>\n          <Input\n            className={classes.input}\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            inputProps={{\n              step: 1,\n              min: 0,\n              max: 100,\n              type: 'number',\n              'aria-labelledby': 'input-slider',\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\n\nconst useStyles = makeStyles({\n    root: {\n      width: 250,\n      fontWeight: 'bold',\n    },\n    input: {\n      width: 42,\n    },\n});\n  \nexport default function ParameterInput(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(props.value);\n\n    const handleInputChange = (event) => {\n        setValue(event.target.value === '' ? '' : Number(event.target.value));\n        props.onChange(event.target.value === '' ? '' : Number(event.target.value));\n    };\n\n    const handleBlur = () => {\n        if (value < 2) {\n            setValue(2);\n        } else if (value > 100) {\n            setValue(100);\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2} alignItems=\"center\">\n                <Grid item>\n                    <Typography id=\"input-slider\" gutterBottom>\n                        <p >{props.valueName}</p>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Input\n                        className={classes.input}\n                        value={value}\n                        margin=\"dense\"\n                        onChange={handleInputChange}\n                        onBlur={handleBlur}\n                        inputProps={{\n                            step: 1,\n                            min: 0,\n                            max: 100,\n                            type: 'number',\n                            'aria-labelledby': 'input-slider',\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//import Grid from '@material-ui/core/Grid';\n\nimport ParameterSliter from './parameterSlider';\nimport ParameterInput from './parameterInput';\n\nconst useStyles = makeStyles({\n    root: {\n      width: 250,\n      margin: 'auto',\n      marginTop: 30,\n    },\n});\n\nexport default function ColorGenerator(props) {\n    const classes = useStyles();\n\n    const [S, setS] = React.useState(20);\n    const [V, setV] = React.useState(100);\n    const [N, setN] = React.useState(2);\n\n    const [colorList, setColorList] = React.useState([]);\n\n    function calculateColor() {\n        setColorList([]);\n        for(let i=0; i< N; i++){\n            let H = parseInt(360/N * i,10);\n            setColorList(colorList => colorList.concat(toRGB(H,S,V)));\n        }\n    };\n\n    function toRGB(H,S,V) {\n        S *= 2.55;\n        V *= 2.55;\n        let R,G,B;\n        let max = V;\n        let min = max - ((S/255)*max);\n        //var max = Math.max(H,S,V);\n        let k = parseInt(H/60,10);\n        switch (k) {\n            case 0:\n                R = max;\n                G = (H/60) * (max - min) +min;\n                B = min;\n                break;\n            case 1:\n                R = ((120 - H) / 60) * (max - min) + min;\n                G = max;\n                B = min;\n                break;\n            case 2:\n                R = min;\n                G = max;\n                B = ((H - 120)/60) * (max - min) + min;\n                break;\n            case 3:\n                R = min;\n                G = ((240 - H)/60) * (max - min) + min;\n                B = max;\n                break;\n            case 4:\n                R = ((H - 240)/60) * (max - min) + min;\n                G = min;\n                B = max;\n                break;\n            case 5:\n                R = max;\n                G = min;\n                B = ((360 - H)/60) * (max - min) + min;\n                break;\n            default:\n                break;\n        }\n        R = parseInt(R,10); G = parseInt(G,10); B = parseInt(B,10);\n        let rgb = [R,G,B];\n        //return(R.toString(16));\n        //return(\"R =\" + R + \", G = \"+ G + \", B = \" + B);\n        return(R.toString(16).padStart(2,'0') + G.toString(16).padStart(2,'0') + B.toString(16).padStart(2,'0'));\n    }\n\n    const GenerateColorList = () => {\n        let c;\n        //let colorli;\n        /*for(let i=0; i < colorList.length; i++){\n            c = \"color:\" + colorList[i];\n            colorli += <li style={{c}}>{colorList[i]}</li>;\n        }*/\n        let colorli = colorList.map((color) => <li>{color}</li>);\n        return(\n            <ul>{colorli}</ul>\n        );\n    };\n\n    return(\n        <div  className={classes.root}>\n            <ParameterSliter valueName=\"S\" value={S} onChange={setS}></ParameterSliter>\n            <ParameterSliter valueName=\"V\" value={V} onChange={setV}></ParameterSliter>\n            <ParameterInput valueName=\"N\" value={N} onChange={setN}></ParameterInput>\n            <Button variant=\"contained\" onClick={calculateColor}>計算する</Button>\n            <p>計算結果 Results</p>\n            <GenerateColorList></GenerateColorList>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ColorGenerator from '../components/colorGenerator';\n\nconst useStyles = makeStyles({\n    root: {\n      width: 500,\n      margin: 'auto',\n    },\n    title: {\n        width: 500,\n        margin: 'auto',\n        paddingTop: '20px',\n        textAlign: 'center',\n    },\n    subtitle: {\n        width: 500,\n        margin: 'auto',\n        borderBottom: 'solid 1px',\n        textAlign: 'center',\n        paddingTop: '20px',\n    },\n    text: {\n        width: 500,\n        margin: 'auto',\n        textAlign: 'center',\n    },\n});\n\nexport default function TopPage(){\n    const classes = useStyles();\n    \n    return(\n        <div>\n            <head>\n                <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../favicon.ico\"/>\n                <title>test</title>\n            </head>\n            <h1 className={classes.title}>MultiColorGenerator</h1>\n            <h3 className={classes.subtitle}>概要 About</h3>\n            <p className={classes.text}>入力に応じてカラーコードを○個出力します．「デザインのために○色欲しいなぁ」と言うときに使ってみてください．</p>\n            <h3 className={classes.subtitle}>使い方 How to Use</h3>\n            <p className={classes.text}>彩度 Sと明度 V，そして欲しい色の数 Nをそれぞれ入力し，「計算する」ボタンを押します．SとVは0~100%のレンジになっています．色相 HをN等分して色を生成し出力します．</p>\n            <ColorGenerator></ColorGenerator>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n//import App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nimport TopPage from './pages/toppage';\n\n\nReactDOM.render(\n  <Router>\n    <Route exact path=\"/multiColorGenerator\" component={TopPage}></Route>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}